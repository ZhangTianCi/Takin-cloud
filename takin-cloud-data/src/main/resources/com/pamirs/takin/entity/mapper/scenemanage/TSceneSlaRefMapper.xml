<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pamirs.takin.entity.dao.scene.manage.TSceneSlaRefMapper">
    <resultMap id="BaseResultMap" type="com.pamirs.takin.entity.domain.entity.scene.manage.SceneSlaRef">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="scene_id" property="sceneId" jdbcType="BIGINT"/>
        <result column="sla_name" property="slaName" jdbcType="VARCHAR"/>
        <result column="business_activity_ids" property="businessActivityIds" jdbcType="VARCHAR"/>
        <result column="target_type" property="targetType" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="is_deleted" property="isDeleted" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_name" property="createName" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_name" property="updateName" jdbcType="VARCHAR"/>
        <result column="condition" property="condition" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, scene_id, sla_name, business_activity_ids, target_type, status, is_deleted, create_time,
    create_name, update_time, update_name, `condition`
    </sql>


    <delete id="deleteBySceneId" parameterType="java.lang.Long">
        delete
        from t_scene_sla_ref
        where scene_id = #{sceneId,jdbcType=BIGINT}
    </delete>

    <insert id="batchInsert">
        insert into t_scene_sla_ref
        (scene_id, sla_name, business_activity_ids, target_type,
        `condition`, `status`)
        values
        <foreach collection="items" item="item" separator=",">
            (
            #{item.sceneId},
            #{item.slaName},
            #{item.businessActivityIds},
            #{item.targetType},
            #{item.condition},
            #{item.status}
            )
        </foreach>
    </insert>

    <select id="selectBySceneId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_scene_sla_ref
        where scene_id = #{sceneId,jdbcType=BIGINT}
    </select>
</mapper>
