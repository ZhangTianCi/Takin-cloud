<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pamirs.takin.entity.dao.scene.manage.TSceneManageMapper">
    <resultMap id="BaseResultMap" type="com.pamirs.takin.entity.domain.entity.scene.manage.SceneManage">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="customer_id" property="customerId" jdbcType="BIGINT"/>
        <result column="deptId" property="deptId" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="scene_name" property="sceneName" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="last_pt_time" property="lastPtTime" jdbcType="TIMESTAMP"/>
        <result column="script_type" property="scriptType" jdbcType="TINYINT"/>
        <result column="is_deleted" property="isDeleted" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="features" property="features" jdbcType="VARCHAR"/>
        <result column="create_name" property="createName" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_name" property="updateName" jdbcType="VARCHAR"/>
        <result column="pt_config" property="ptConfig" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, customer_id, scene_name, status, `type`,last_pt_time, script_type, is_deleted, create_time,features, create_name,
    update_time, update_name, pt_config, dept_id, user_id
    </sql>

    <select id="selectAllSceneManageList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_scene_manage
        where is_deleted = 0
    </select>

    <select id="getPageList" parameterType="com.pamirs.takin.entity.domain.vo.scenemanage.SceneManageQueryVO"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_scene_manage
        <where>
            <if test="sceneId != null">
                and id = #{sceneId}
            </if>
            <if test="customerIds != null and customerIds.size() > 0">
                and customer_id in
                <foreach collection="customerIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="sceneIds != null and sceneIds.size() > 0">
                and id in
                <foreach collection="sceneIds" item="sceneId" open="(" separator="," close=")">
                    #{sceneId}
                </foreach>
            </if>
            <if test="customerId != null">
                and customer_id = #{customerId}
            </if>
            <if test="sceneName != null">
                and scene_name like concat('%', #{sceneName}, '%')
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="type != null">
                and `type` = #{type}
            </if>

            <if test="lastPtEndTime != null and lastPtEndTime != ''">
                and last_pt_time &lt;= #{lastPtEndTime,jdbcType=VARCHAR}
            </if>
            <if test="lastPtStartTime != null and lastPtStartTime != ''">
                and last_pt_time &gt;= #{lastPtStartTime,jdbcType=VARCHAR}
            </if>
            and is_deleted = 0
        </where>
        order by last_pt_time desc, id desc
    </select>

    <select id="getByIds" resultMap="BaseResultMap">
        select * from t_scene_manage
        where id in
        <foreach collection="ids" open="(" close=")" separator="," item="sceneId">
            #{sceneId}
        </foreach>
        and is_deleted = 0

    </select>
</mapper>
